apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'de.undercouch.download'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }




    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }



    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
}


// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from: "download_model.gradle"

apply from: 'download_model.gradle'

dependencies {
    def lifecycle_version = "2.1.0"
    def rxandroid_version = "2.1.1"
    def rxjava_version = "2.2.11"
    def retrofit_version = '2.7.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'


    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0'

    //RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"


    //glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    //AWS
    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.7.+@aar') { transitive = true }
    implementation 'com.amazonaws:aws-android-sdk-s3:2.7.+'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.16.4'

    implementation 'com.google.android.gms:play-services-vision:15.0.1'


    implementation 'androidx.exifinterface:exifinterface:1.1.0'
    implementation 'io.fotoapparat:fotoapparat:2.7.0'
    implementation 'com.github.bumptech.glide:glide:4.10.0'

    //tensorflow
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    // Set this dependency to use JUnit 4 rules
    androidTestImplementation('com.android.support.test:rules:1.0.2'){
        exclude module: 'support-annotations'
    }

    //test
    testImplementation 'org.mockito:mockito-core:2.13.0'
    testImplementation "android.arch.core:core-testing:1.1.1"
}
